package org.comstudy21.ch04.ex04;

import java.util.Scanner;

import org.comstudy21.ch04.ex03.People;

public class Ch04Ex06 {
	public static final int MAX = 100;
	private People[] pArr = new People[MAX];
	private int top = 0;
	private int seq = 0; // 감소없이 계속 증가 idx에 사용
	public static final Scanner sc = new Scanner(System.in);

	public Ch04Ex06() {
		while (true) {
			run();
		}

	}

	public void run() {

		switch (menu()) {
		case 1:
			input();
			break;
		case 2:
			output();
			break;
		case 3:
			search();
			break;
		case 4:
			modify();
			break;
		case 5:
			delete();
			break;
		case 6:
			System.out.println("주소록을 종료합니다.");
			System.exit(0);
			break;
		default:
			System.out.println("해당사항없음");
		}
		System.out.println("☎☏☎☏☎☏☎☏☎☏☎☏☎☏☎☏");

	}

	public int menu() {
		int no = 0;
		System.out.println("1.입력 2.출력 3.검색 4.수정 5.삭제 6.종료");
		System.out.print("선택 >> ");
		no = sc.nextInt();
		sc.nextLine();
		return no;

	}

	public void input() {

		if (top >= pArr.length) {
			System.out.println("주소록이 가득 찼습니다.입력불가");
			return;
		}

		People p = new People();
		p.setIdx(seq++);
		// sc.nextLine();
		System.out.println("이름 : ");
		p.setName(sc.nextLine());
		System.out.println("번호 : ");
		p.setPhone(sc.nextLine());
		System.out.print("입력완료");

		pArr[top++] = p;

		// 객체생성
		// 데이터넣기
		// 객체배열에 [top]번지 담기

	}

	public void output() {

		System.out.println("주소록을 모두 출력합니다.");
		for (People p : pArr) {
			if (p == null)
				break;
			System.out.println(p);
		}

	}

	public void search(){
		if(top==0){System.out.println("주소록이비어있습니다.");return;}
		System.out.println("검색할 이름을 입력하세요.");
		String findname = sc.nextLine();
		
		
		
		boolean findit = false;
		for(int i = 0 ; i < top ; i++){
			People someone = new People();
			if(pArr[i].getName().equals(findname)){
				someone = pArr[i]; findit =true;
				System.out.println(someone.toString());
				
			}
		}
		if(!findit){System.out.println("찾을수없습니다.");}
		
	}
		
	public void modify() {
		if(top==0){System.out.println("주소록이비어있습니다.");return;}
		System.out.println("검색할 이름을 입력하세요.");
		String findname = sc.nextLine();
		
		
		
		boolean findit = false;
		
		
		People someone = new People();
		for(int i = 0 ; i < top ; i++){
			if(pArr[i].getName().equals(findname)){
				someone = pArr[i]; findit =true;
				System.out.println(someone.toString());
				
			}
		}
		if(!findit){System.out.println("찾을수없습니다.");}
		
	
		System.out.print("수정할 부분을 입력하세요: \n 1.이름 2.번호 ");
		int select = sc.nextInt();
		sc.nextLine();

		switch (select) {
		case 1:
			System.out.print("변경할 이름을 입력하세요");
			String newname = sc.nextLine();
			someone.setName(newname);

			break;
		case 2:
			System.out.print("변경할 번호을 입력하세요");
			String newphone = sc.nextLine();
			someone.setPhone(newphone);

			break;
		default:
			System.out.println("잘못입력하셨습니다.");

		}

	}

	public void delete() {
		if(top==0){System.out.println("주소록이비어있습니다.");return;}
		System.out.println("검색할 이름을 입력하세요.");
		String findname = sc.nextLine();
		People someone = new People();
		boolean findit = false;
		
		for(int i = 0 ; i < top ; i++){
			if(pArr[i].getName().equals(findname)){
				someone = pArr[i]; findit =true;
				System.out.println(someone.toString());
				
				
				System.out.println("이 주소록을 삭제할까요? y/n");

				String answer = sc.nextLine();
				switch (answer) {
				case "y":
				case "Y":
					for (int j = i ; j < top; j++) {
						pArr[j] = pArr[j + 1];
						
					}top--;
					System.out.println("삭제완료");
					break;
				case "n":
				case "N":
					System.out.println("삭제를 취소합니다");
					break;
				default:
					System.out.println("잘못된입력입니다.다시 검색해주세요");
					delete();
				}
			}
		}
		if(!findit){System.out.println("찾을수없습니다.");}
		
		
		
		
		
	}

	public static void main(String[] args) {

		new Ch04Ex06();

	}

}
